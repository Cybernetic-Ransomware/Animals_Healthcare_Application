# Generated by Django 4.2.1 on 2023-10-12 07:43

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('animals', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BiometricCustomRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_name', models.CharField(max_length=30)),
                ('record_value', models.CharField(max_length=255)),
                ('record_unit', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='BiometricHeightRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(decimal_places=3, default=0, max_digits=8)),
                ('height_unit_to_present', models.CharField(default='mm', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='BiometricWeightRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=8)),
                ('weight_unit_to_present', models.CharField(default='g', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='UUIDTaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_event_started', models.DateField(blank=True, null=True)),
                ('date_event_ended', models.DateField(blank=True, null=True)),
                ('participants', models.CharField(blank=True, max_length=80)),
                ('place', models.CharField(blank=True, max_length=80)),
                ('short_description', models.CharField(max_length=125)),
                ('full_description', models.CharField(blank=True, max_length=2500)),
                ('type_of_event', models.CharField(max_length=50)),
                ('additional_animals', models.ManyToManyField(blank=True, related_name='additional_animals', to='animals.animal')),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='animals.animal')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('note_tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='medical_notes.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentMedicine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('food_type', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=80)),
                ('producer', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=250)),
                ('frequency_description', models.CharField(max_length=250)),
                ('notifications_is_active', models.BooleanField(default=False)),
                ('notification_form', models.CharField(max_length=50)),
                ('notification_message', models.CharField(max_length=2500)),
                ('notification_frequency_interval', models.DurationField(blank=True, null=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='animals.animal')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentDiet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('food_type', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=80)),
                ('producer', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=250)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='animals.animal')),
            ],
        ),
        migrations.CreateModel(
            name='BiometricRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='animals.animal')),
                ('custom_biometric_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medical_notes.biometriccustomrecords')),
                ('height_biometric_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medical_notes.biometricheightrecords')),
                ('related_note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medical_notes.medicalrecord')),
                ('weight_biometric_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medical_notes.biometricweightrecords')),
            ],
        ),
    ]
